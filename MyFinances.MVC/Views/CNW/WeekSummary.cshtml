@model MyFinances.Website.ViewModels.WeekSummaryVM
@using MyFinances.Helpers
@{
    ViewBag.Title = "CNW Week Summary";
}

<div class="mvcView">
    <h2>CNW Week Summary</h2>

    @if (Model != null && Model.Payment != null && Model.Routes.Any())
    {
        <table class="table">
            <thead>
                <tr>
                    @{
                        var previousWeek = Model.Payment.WeekNo == 1 ? 52 : Model.Payment.WeekNo - 1;
                        var nextWeek = Model.Payment.WeekNo == 52 ? 1 : Model.Payment.WeekNo + 1;
                    }
                    <th colspan="2"><< @Html.ActionLink("Week " + previousWeek, "WeekSummary", new { Id = previousWeek }) || @Html.ActionLink("Next " + nextWeek, "WeekSummary", new { Id = nextWeek }) >></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <th scope="row">Invoice No</th>
                    <td>@Model.Payment.InvoiceNo</td>
                </tr>
                <tr>
                    <th scope="row" width="30%">Week No</th>
                    <td>@Model.Payment.WeekNo</td>
                <tr>
                    <th scope="row">Week Date</th>
                    <td>@Model.Payment.WeekDate.ToShortDateString()</td>
                </tr>
                <tr>
                    <th scope="row">Invoice Date</th>
                    <td>@Model.Payment.PayDate.ToShortDateString()</td>
                </tr>
                <tr>
                    <th scope="row">Routes</th>
                    <td>@Model.Payment.Routes</td>
                </tr>
                <tr>
                    <th scope="row">Deductions</th>
                    <td>
                        <span class="label label-danger">Admin fee: £@Model.Payment.DeduAdminFee.ToString("#.##")</span> <br />
                        <span class="label label-danger">Van rental: £@Model.Payment.DeduVanRental.ToString("#.##")</span> 
                        @if (Model.Payment.DeduVanFines > 0)
                        {
                            <br /><span class="label label-danger">Van fines: £@Model.Payment.DeduVanFines.ToString("#.##")</span> 
                        }
                        @if (Model.Payment.DeduVanDamages > 0)
                        {
                            <br /><span class="label label-danger">Van damges: £@Model.Payment.DeduVanDamages.ToString("#.##")</span>
                        }
                        @if (Model.Payment.DeduFuel > 0)
                        {
                            <br /><span class="label label-danger">Co Fuel: £@Model.Payment.DeduFuel.ToString("#.##")</span>
                        }
                    </td>
                </tr>
                <tr>
                    <th scope="row">BYOD</th>
                    <td colspan="3">£@(Model.Payment.Byod.HasValue ? Model.Payment.Byod.Value.ToString("#.##") : null)</td>
                </tr>
                <tr>
                    <th scope="row">Top-Up from Flat Rate VAT Pot</th>
                    <td>£@Model.Payment.CNWRates.VATFlatRate.ToString("#.##")</td>
                </tr>
                <tr>
                    <th scope="row">Estimated fuel cost</th>
                    <td>
                        £@Model.Payment.EstimatedFuelCost.ToString("#.##") <small><i>(averaged @Model.Payment.AverageMpg mpg)</i></small><br />
                        @Html.Raw(Utils.AmountDifference(Model.Payment.ActualMileagePay, (decimal)Model.Payment.EstimatedFuelCost, true, "Fuel difference: "))
                    </td>
                </tr>
                @if (!string.IsNullOrEmpty(Model.Payment.Info))
                {
                    <tr>
                        <th scope="row">Info</th>
                        <td>@Model.Payment.Info</td>
                    </tr>
                }
                <tr>
                    <th scope="row">Routes</th>
                    <td>
                        @foreach (var route in Model.Routes)
                        {
                            <div>
                                @Html.ActionLink(route.RouteDate.ToShortDateString() + " - " + route.RouteType, "RouteSummary", new { Id = route.Id })  @(route.ExtraDrops.HasValue && route.ExtraDrops != 0 ? Html.Raw($"<small><span class='label label-{(route.ExtraDrops > 0 ? "success" : "danger")}'>+ support</span></small>") : null)
                            </div>
                        }
                    </td>
                </tr>
            </tbody>
        </table>
        <table class="table">
            <thead class="thead-dark">
                <tr>
                    <th scope="col" width="25%"></th>
                    <th scope="col" width="25%">Calculated</th>
                    <th scope="col" width="25%">Invoice</th>
                    <th scope="col">Difference</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <th scope="row">Miles</th>
                    <td>@(Model.Payment.CalcMiles + @Model.Payment.CalcSupportMiles) <small><i>(miles: @Model.Payment.CalcMiles + support: @Model.Payment.CalcSupportMiles)</i></small></td>
                    <td>@Model.Payment.ActualMiles</td>
                    <td>@Html.Raw(Utils.AmountDifference(Model.Payment.ActualMiles, (Model.Payment.CalcMiles + Model.Payment.CalcSupportMiles), false))</td>
                </tr>
                @if (Model.Payment.CalcSupportPay.HasValue)
                {
                    <tr>
                        <th scope="row">Support Pay</th>
                        <td>£@Model.Payment.CalcSupportPay.Value.ToString("#.##") <small><i>(@Model.Payment.CalcSupportDrops.Value.ToString("#.##") drops + £@Model.Payment.CalcSupportMileagePay.Value.ToString("#.##") fuel)</i></small></td>
                        <td>£@(Model.Payment.ActualSupportPay.HasValue ? Model.Payment.ActualSupportPay.Value.ToString("#.##") : null)</td>
                        <td>@Html.Raw(Utils.AmountDifference(Model.Payment.ActualSupportPay, Model.Payment.CalcSupportPay))</td>
                    </tr>
                }
                <tr>
                    <th scope="row">Route Pay</th>
                    <td>£@Model.Payment.CalcRoutePay.ToString("#.##")</td>
                    <td>£@(Model.Payment.ActualRoutePay.HasValue ? Model.Payment.ActualRoutePay.Value.ToString("#.##") : null)</td>
                    <td>@Html.Raw(Utils.AmountDifference(Model.Payment.ActualRoutePay, Model.Payment.CalcRoutePay))</td>
                </tr>
                <tr>
                    <th scope="row">Mileage Pay</th>
                    <td>£@Model.Payment.CalcMileagePay.ToString("#.##")</td>
                    <td>£@(Model.Payment.ActualMileagePay.HasValue ? Model.Payment.ActualMileagePay.Value.ToString("#.##") : null)</td>
                    <td>@Html.Raw(Utils.AmountDifference(Model.Payment.ActualMileagePay, Model.Payment.CalcMileagePay))</td>
                </tr>
                @*total amount for all additions minus deductions*@
                @*<tr>
                        <th scope="row">Net Amount</th>
                        <td>£@Model.Payment.CalcNetAmount.Value.ToString("#.##")</td>
                        <td>£@(Model.Payment.ActualNetAmount.HasValue ? Model.Payment.ActualNetAmount.Value.ToString("#.##") : null)</td>
                        <td>@Html.Raw(Utils.AmountDifference(Model.Payment.ActualNetAmount, Model.Payment.CalcNetAmount))</td>
                    </tr>*@
                <tr>
                    <th scope="row">Total Pay</th>
                    <td>£@Model.Payment.CalcTotalPayToDriver.ToString("#.##")</td>
                    <td>£@(Model.Payment.ActualTotalPay.HasValue ? Model.Payment.ActualTotalPay.Value.ToString("#.##") : null)</td>
                    <td>@Html.Raw(Utils.AmountDifference(Model.Payment.ActualTotalPay, Model.Payment.CalcTotalPayToDriver))</td>
                </tr>
            </tbody>
        </table>
    }
    else
    {
        <h2>Week does not have any routes or week summary not recorded</h2>
    }
</div>