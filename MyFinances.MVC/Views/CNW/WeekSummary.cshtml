@model MyFinances.Model.CNWPayment
@using MyFinances.Helpers
@{
    ViewBag.Title = "CNW Week Summary";
}

    <h2>CNW Week Summary</h2>

    @if (Model != null)
    {
        <table class="table">
            <thead>
                <tr>
                    <th colspan="2"><< @Html.ActionLink("Previous Week", "WeekSummary", new { Id = Model.WeekDate.AddDays(-7).ToString("dd-MM-yy") }) || @Html.ActionLink("Next Week", "WeekSummary", new { Id = Model.WeekDate.AddDays(7).ToString("dd-MM-yy") }) >></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <th scope="row">Invoice No</th>
                    <td>@Model.InvoiceNo</td>
                </tr>
                <tr>
                    <th scope="row" width="30%">Week No</th>
                    <td>@Model.WeekNo</td>
                <tr>
                    <th scope="row">Week Date</th>
                    <td>@Model.WeekDate.ToShortDateString()</td>
                </tr>
                <tr>
                    <th scope="row">Invoice Date</th>
                    <td>@Model.PayDate.ToShortDateString()</td>
                </tr>
                <tr>
                    <th scope="row">Routes</th>
                    <td>@Model.Routes</td>
                </tr>
                <tr>
                    <th scope="row">Deductions</th>
                    <td>
                        <small>
                            <i>
                                Admin fee: £@Model.DeduAdminFee.ToString("#.##") <br />
                                Van rental: £@Model.DeduVanRental.ToString("#.##") <br />
                                Van fines: £@Model.DeduVanFines.ToString("#.##") <br />
                                Van damges: £@Model.DeduVanDamages.ToString("#.##")
                            </i>
                        </small>
                    </td>
                </tr>
                <tr>
                    <th scope="row">Estimated fuel cost</th>
                    <td>@Model.EstimatedFuelCost.ToString("#.##") <small><i>(averaged @Model.AverageMpg mpg)</i></small></td>
                </tr>
                @if (!string.IsNullOrEmpty(Model.Info))
                {
                    <tr>
                        <th scope="row">Info</th>
                        <td>@Model.Info</td>
                    </tr>
                }
                <tr>
                    <th scope="row">View Routes</th>
                    <td><a href="">Here</a></td>
                </tr>
            </tbody>
        </table>
        <table class="table">
            <thead class="thead-dark">
                <tr>
                    <th scope="col" width="25%"></th>
                    <th scope="col" width="25%">Calculated</th>
                    <th scope="col" width="25%">Invoice</th>
                    <th scope="col">Difference</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <th scope="row">Miles</th>
                    <td>@(Model.CalcMiles + @Model.CalcSupportMiles) <small><i>(miles: @Model.CalcMiles + support: @Model.CalcSupportMiles)</i></small></td>
                    <td>@Model.ActualMiles</td>
                    <td>@Html.Raw(Utils.AmountDifference(Model.ActualMiles, (Model.CalcMiles + Model.CalcSupportMiles), ""))</td>
                </tr>
                <tr>
                    <th scope="row">Support Pay</th>
                    <td>£@Model.CalcSupportPay.Value.ToString("#.##") <small><i>(@Model.CalcSupportDrops.Value.ToString("#.##") drops + £@Model.CalcSupportMileagePay.Value.ToString("#.##") fuel)</i></small></td>
                    <td>£@(Model.ActualSupportPay.HasValue ? Model.ActualSupportPay.Value.ToString("#.##") : null)</td>
                    <td>@Html.Raw(Utils.AmountDifference(Model.ActualSupportPay, Model.CalcSupportPay, ""))</td>
                </tr>
                <tr>
                    <th scope="row">Route Pay</th>
                    <td>£@Model.CalcRoutePay.ToString("#.##")</td>
                    <td>£@(Model.ActualRoutePay.HasValue ? Model.ActualRoutePay.Value.ToString("#.##") : null)</td>
                    <td>@Html.Raw(Utils.AmountDifference(Model.ActualRoutePay, Model.CalcRoutePay))</td>
                </tr>
                <tr>
                    <th scope="row">Mileage Pay</th>
                    <td>£@Model.CalcMileagePay.ToString("#.##")</td>
                    <td>£@(Model.ActualMileagePay.HasValue ? Model.ActualMileagePay.Value.ToString("#.##") : null)</td>
                    <td>@Html.Raw(Utils.AmountDifference(Model.ActualMileagePay, Model.CalcMileagePay))</td>
                </tr>
                @*total amount for all additions minus deductions*@
                <tr>
                    <th scope="row">Net Amount</th>
                    <td>£@Model.CalcNetAmount.Value.ToString("#.##")</td>
                    <td>£@(Model.ActualNetAmount.HasValue ? Model.ActualNetAmount.Value.ToString("#.##") : null)</td>
                    <td>@Html.Raw(Utils.AmountDifference(Model.ActualNetAmount, Model.CalcNetAmount))</td>
                </tr>
                <tr>
                    <th scope="row">Top-Up from Flat Rate VAT Pot</th>
                    <td colspan="3">£@Model.CNWRates.VATFlatRate.ToString("#.##")</td>
                </tr>
                <tr>
                    <th scope="row">Total Pay</th>
                    <td>£@Model.CalcTotalPayToDriver.Value.ToString("#.##")</td>
                    <td>£@(Model.ActualTotalPay.HasValue ? Model.ActualTotalPay.Value.ToString("#.##") : null)</td>
                    <td>@Html.Raw(Utils.AmountDifference(Model.ActualTotalPay, Model.CalcTotalPayToDriver))</td>
                </tr>
            </tbody>
        </table>
    }
    else
    {
        <h2>Week not recorded</h2>
    }