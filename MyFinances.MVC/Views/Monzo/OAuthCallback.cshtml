@model MyFinances.Website.ViewModels.AccountSummaryModel
@using MyFinances.Helpers
@{
    ViewBag.Title = "Account Summary";
    var SortCodeFormat = string.Join(
                            "-",
                            new[] {
                                Model.Account.SortCode.Substring(0, 2),
                                Model.Account.SortCode.Substring(2, 2),
                                Model.Account.SortCode.Substring(4, 2)
                                    });
}

<div class="mvcView">
    <h1 class="text-center">Accout No: @Model.Account.AccountNumber - Sort Code: @SortCodeFormat</h1>
    <div class="row">
        <div class="col-md-6">
            <h2><small>Balance:</small></h2>
            <div class="well well-sm">
                <span class="h3">@Utils.ToCurrency(Model.Balance.Value / 100m)</span>
            </div>
        </div>
        <div class="col-md-6">
            <h2><small>Spent Today:</small></h2>
            <div class="well well-sm">
                <span class="h3">@Utils.ToCurrency(-Model.SpentToday)</span>
            </div>
        </div>
    </div>

    <table class="table table-hover">
        <tbody>
            @foreach (var transaction in Model.Transactions)
            {
                var plus = (transaction.Amount > 0 ? "+" : null);
                var color = (transaction.Amount > 0 ? "green" : null);
                var name = (transaction.Merchant?.Name.Substring(0, Math.Min(transaction.Merchant.Name.Length, 10)) ?? transaction.Description.Substring(0, Math.Min(transaction.Description.Length, 15)));
                <tr>
                    <td><img src="@(transaction.Merchant?.Logo)" width="32" height="32" class="img-rounded" onerror="this.src='@Url.Content("~/Content/Images/myfinanceapp.png")'" /></td>
                    <td>@name <small>(@(transaction.Category))</small></td>
                    <td>@(transaction.Created.ToLongDateString()) <small>(@(transaction.Created.ToShortTimeString()))</small></td>
                    <td class="text-right">
                        @if (!Model.SyncedTransactions.Contains(transaction.Id) && !transaction.Description.StartsWith("pot_") && transaction.Amount != 0)
                        {
                            <small>@Html.ActionLink("(sync)", "AddTransaction", "Monzo", new { monzoTransId = transaction.Id, name, transaction.Amount, date = transaction.Created.ToString("yyyy-MM-ddTHH:mm") }, new { target = "_blank" })</small>
                        }
                        <font color="@color"><strong>@plus@Utils.ToCurrency(transaction.Amount / 100m)</strong></font>
                    </td>
                </tr>

            }
        </tbody>
    </table>
</div>