
@model MyFinances.Website.ViewModels.MonzoAccountSummaryVM
@using MyFinances.Helpers
@{
    ViewBag.Title = "Account Summary";
    var SortCodeFormat = string.Join(
                            "-",
                            new[] {
                                Model.SortCode.Substring(0, 2),
                                Model.SortCode.Substring(2, 2),
                                Model.SortCode.Substring(4, 2)
                                            });
}

    <div class="mvcView">
        <h2 class="text-center">Accout No: @Model.AccountNo - Sort Code: @SortCodeFormat</h2>
        <a href='@Url.Action("Login", "Monzo")'><img src='@Url.Content("~/Content/Images/monzo_logo.png")' /></a><br />
        <div class="col-xs-12 alert alert-warning">
            <i class="glyphicon glyphicon-exclamation-sign"></i> Last Updated: @Model.LastSynced.ToString("dd/MM/yyyy HH:mm")
        </div>
        @if (Model.Modal != null)
        {
            @Html.Partial("_BootBox", Model.Modal)
        }
        <div class="row">
            <div class="col-md-2">
                <h2><small>Balance:</small></h2>
                <div class="well well-sm">
                    <span class="h3">@Utils.ToCurrency(Model.Balance)</span>
                </div>
            </div>
            @*<div class="col-md-4">
                <h2><small>Savings:</small></h2>
                <div class="well well-sm">
                    <span class="h3">@Utils.ToCurrency(Model.SavingsBalance)</span>
                </div>
            </div>*@
            <div class="col-md-2">
                <h2><small>Spent Today:</small></h2>
                <div class="well well-sm">
                    <span class="h3">@Utils.ToCurrency(-Model.SpentToday)</span>
                </div>
            </div>
        </div>
        @if (Model.PendingTransactions.Any())
        {
            <table class="table table-hover">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col" colspan="4" class="text-warning">
                            Pending Transactions
                            <a href="@Url.Action("ApproveDataAccess", "Monzo", new { showPotAndTags = !Model.ShowPotAndTags })" class="top-menu pull-right">
                                <i class="glyphicon glyphicon-info-sign"></i> @(Model.ShowPotAndTags ? "Hide" : "Show")
                            </a>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var transaction in Model.PendingTransactions)
                    {
                        var plus = (transaction.Amount > 0 ? "+" : null);
                        var color = (transaction.Amount > 0 ? "green" : null);
                        <tr>
                            <td width="10%"><img src="@(transaction.Logo)" width="32" height="32" class="img-rounded" onerror="this.src='@Url.Content("~/Content/Images/myfinanceapp.png")'" /></td>
                            <td title="@transaction.Description"> <br />@transaction.Name<small style="display: @(Model.ShowPotAndTags ? "block" : "none")">(@transaction.Category) @transaction.Description</small></td>
                            <td>@(transaction.Created.ToShortDateString()) <small>(@(transaction.Created.ToShortTimeString()))</small></td>
                            <td class="text-right">
                                <font color="@color"><strong>@plus@Utils.ToCurrency(transaction.Amount / 100m)</strong></font>
                            </td>
                        </tr>

                    }
                </tbody>
            </table>
        }
        else
        {
            <div class="col-xs-12 alert alert-success">
                <div class="glyphicon glyphicon-ok"></div>
                <div>There are no pending transactions</div>
            </div>
        }
        @if (Model.UnsyncedTransactions.Any())
        {
            <table class="table table-hover">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col" colspan="4" class="text-success">
                            Unsynced Transactions
                            <a href="@Url.Action("ApproveDataAccess", "Monzo", new { showPotAndTags = !Model.ShowPotAndTags })" class="top-menu pull-right">
                                <i class="glyphicon glyphicon-info-sign"></i> @(Model.ShowPotAndTags ? "Hide" : "Show")
                            </a>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var transaction in Model.UnsyncedTransactions)
                    {
                        var plus = (transaction.Amount > 0 ? "+" : null);
                        var color = (transaction.Amount > 0 ? "green" : null);
                        <tr>
                            <td width="10%"><img src="@(transaction.Logo)" width="32" height="32" class="img-rounded" onerror="this.src='@Url.Content("~/Content/Images/myfinanceapp.png")'" /></td>
                            <td title="@transaction.Description settled on @transaction.Settled"> <br />@transaction.Name<small style="display: @(Model.ShowPotAndTags ? "block" : "none")">(@transaction.Category) @transaction.Description</small></td>
                            <td>@(transaction.Created.ToShortDateString()) <small>(@(transaction.Created.ToShortTimeString()))</small></td>
                            <td class="text-right">
                                <small>@Html.ActionLink("(sync)", "AddTransaction", "Monzo", new { monzoTransId = transaction.Id, transaction.Name, transaction.Amount, date = transaction.Created.ToString("yyyy-MM-ddTHH:mm") }, new { target = "_blank" })</small>
                                <font color="@color"><strong>@plus@Utils.ToCurrency(transaction.Amount / 100m)</strong></font>
                            </td>
                        </tr>

                    }
                </tbody>
            </table>
        }
        else
        {
            <div class="col-xs-12 alert alert-success">
                <div class="glyphicon glyphicon-ok"></div>
                <div>There are no unsycned transactions</div>
            </div>
        }
        @if (Model.SettledTransactions.Any())
        {
            <table class="table table-hover">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col" colspan="4" class="text-success">
                            Settled Transactions
                            <a href="@Url.Action("ApproveDataAccess", "Monzo", new { showPotAndTags = !Model.ShowPotAndTags })" class="top-menu pull-right">
                                <i class="glyphicon glyphicon-info-sign"></i> @(Model.ShowPotAndTags ? "Hide" : "Show")
                            </a>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var transaction in Model.SettledTransactions)
                    {
                        var plus = (transaction.Amount > 0 ? "+" : null);
                        var color = (transaction.Amount > 0 ? "green" : null);
                        <tr>
                            <td width="10%"><img src="@(transaction.Logo)" width="32" height="32" class="img-rounded" onerror="this.src='@Url.Content("~/Content/Images/myfinanceapp.png")'" /></td>
                            <td title="@transaction.Description settled on @transaction.Settled"> <br />@transaction.Name <small style="display: @(Model.ShowPotAndTags ? "block" : "none")">(@transaction.Category) @transaction.Description</small></td>
                            <td>@(transaction.Created.ToShortDateString()) <small>(@(transaction.Created.ToShortTimeString()))</small></td>
                            <td class="text-right">
                                <font color="@color"><strong>@plus@Utils.ToCurrency(transaction.Amount / 100m)</strong></font>
                            </td>
                        </tr>

                    }
                </tbody>
            </table>
        }
    </div>
