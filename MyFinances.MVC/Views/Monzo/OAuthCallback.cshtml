
@model MyFinances.Website.ViewModels.MonzoAccountSummaryVM
@using MyFinances.Helpers
@{
    ViewBag.Title = "Account Summary";
    var SortCodeFormat = string.Join(
                            "-",
                            new[] {
                                Model.SortCode.Substring(0, 2),
                                Model.SortCode.Substring(2, 2),
                                Model.SortCode.Substring(4, 2)
                                            });
}

    <div class="mvcView">
        <h1 class="text-center">Accout No: @Model.AccountNo - Sort Code: @SortCodeFormat</h1> @Html.ActionLink($"(last synced: {Model.LastSynced.ToString("dd/MM/yyyy HH:mm")})", "ApproveDataAccess", "Monzo") <a href='@Url.Action("Login", "Monzo")'><img src='@Url.Content("~/Content/Images/refresh.png")' /></a>
        @if (Model.Modal != null)
        {
            @Html.Partial("_BootBox", Model.Modal)
        }
        <div class="row">
            <div class="col-md-4">
                <h2><small>Balance:</small></h2>
                <div class="well well-sm">
                    <span class="h3">@Utils.ToCurrency(Model.Balance)</span>
                </div>
            </div>
            <div class="col-md-4">
                <h2><small>Savings:</small></h2>
                <div class="well well-sm">
                    <span class="h3">@Utils.ToCurrency(Model.Balance)</span>
                </div>
            </div>
            <div class="col-md-4">
                <h2><small>Spent Today:</small></h2>
                <div class="well well-sm">
                    <span class="h3">@Utils.ToCurrency(-Model.SpentToday)</span>
                </div>
            </div>
        </div>
        <table class="table table-hover">
            <tbody>
                @foreach (var transaction in Model.Transactions)
                {
                    var plus = (transaction.Amount > 0 ? "+" : null);
                    var color = (transaction.Amount > 0 ? "green" : null);
                    var name = (transaction.Name.Substring(0, Math.Min(transaction.Name.Length, 15)));

                    <tr>
                        <td><img src="@(transaction.Logo)" width="32" height="32" class="img-rounded" onerror="this.src='@Url.Content("~/Content/Images/myfinanceapp.png")'" /></td>
                        <td title="@transaction.Description settled on @transaction.Settled">@name <br /><small style="display: none">(@transaction.Description)</small></td>
                        <td>@(transaction.Created.ToShortDateString()) <small>(@(transaction.Created.ToShortTimeString()))</small></td>
                        <td class="text-right">
                            @if (!Model.SyncedTransactions.SelectMany(x => x.Value.Transactions).Contains(transaction.Id) && !transaction.Name.StartsWith("pot_") && transaction.Amount != 0)
                            {
                                <small>@Html.ActionLink("(sync)", "AddTransaction", "Monzo", new { monzoTransId = transaction.Id, name, transaction.Amount, date = transaction.Created.ToString("yyyy-MM-ddTHH:mm") }, new { target = "_blank" })</small>
                            }
                            <font color="@color"><strong>@plus@Utils.ToCurrency(transaction.Amount / 100m)</strong></font>
                        </td>
                    </tr>

                }
            </tbody>
        </table>
    </div>